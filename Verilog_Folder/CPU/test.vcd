$date
	Mon Dec 28 17:15:01 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module CPU_TB $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$scope module cpu $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # stop $end
$var wire 1 $ pcWR $end
$var wire 1 % memWR $end
$var wire 12 & ins [11:0] $end
$var wire 16 ' inDataB [15:0] $end
$var wire 16 ( inDataA [15:0] $end
$var wire 1 ) ifBan $end
$var wire 16 * aluData [15:0] $end
$var wire 4 + aluCode [3:0] $end
$var wire 1 , accWR $end
$var wire 8 - Addr [7:0] $end
$scope module acc $end
$var wire 1 ! clk $end
$var wire 16 . outData [15:0] $end
$var wire 16 / inData [15:0] $end
$var wire 1 , accWR $end
$var reg 16 0 accData [15:0] $end
$upscope $end
$scope module alu $end
$var wire 16 1 inDataA [15:0] $end
$var wire 16 2 inDataB [15:0] $end
$var wire 4 3 aluCode [3:0] $end
$var reg 16 4 aluData [15:0] $end
$var reg 1 ) ifBan $end
$upscope $end
$scope module cu $end
$var wire 4 5 ins [3:0] $end
$var reg 1 , accWR $end
$var reg 4 6 aluCode [3:0] $end
$var reg 1 % memWR $end
$var reg 1 $ pcWR $end
$var reg 1 # stop $end
$upscope $end
$scope module insreg $end
$var wire 8 7 Addr [7:0] $end
$var reg 12 8 ins [11:0] $end
$upscope $end
$scope module memor $end
$var wire 8 9 Addr [7:0] $end
$var wire 1 ! clk $end
$var wire 16 : inData [15:0] $end
$var wire 1 % memWR $end
$var wire 16 ; outData [15:0] $end
$upscope $end
$scope module pc $end
$var wire 1 ! clk $end
$var wire 1 ) ifBan $end
$var wire 8 < jump [7:0] $end
$var wire 1 $ pcWR $end
$var wire 1 " rst $end
$var wire 1 # stop $end
$var reg 8 = Addr [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 =
b10 <
b1 ;
b1 :
b10 9
b10 8
b1 7
b100 6
b0 5
b1 4
b100 3
b1 2
b0 1
b0 0
b1 /
b0 .
b1 -
1,
b100 +
b1 *
0)
b0 (
b1 '
b10 &
0%
0$
0#
0"
1!
$end
#1
0,
1%
b101 +
b101 3
b101 6
b100 5
b1000000000000000 '
b1000000000000000 2
b1000000000000000 ;
b1 9
b1 <
b1 *
b1 /
b1 4
b1 :
b10000000001 &
b10000000001 8
b1 (
b1 .
b1 1
b1 0
b0 -
b0 7
b0 =
0!
1"
#2
b10 *
b10 /
b10 4
b10 :
1,
0%
b100 +
b100 3
b100 6
b0 5
b1 '
b1 2
b1 ;
b10 9
b10 <
b10 &
b10 8
b1 -
b1 7
b1 =
1!
0"
#3
b11 *
b11 /
b11 4
b11 :
b10 (
b10 .
b10 1
b10 0
0!
#4
b10 +
b10 3
b10 6
b1 *
b1 /
b1 4
b1 :
b1101 5
b10 '
b10 2
b10 ;
b0 9
b0 <
b110100000000 &
b110100000000 8
b10 -
b10 7
b10 =
1!
#5
b0 *
b0 /
b0 4
b0 :
b1 (
b1 .
b1 1
b1 0
0!
#6
b10 *
b10 /
b10 4
b10 :
b100 +
b100 3
b100 6
b0 5
b1 '
b1 2
b1 ;
b10 9
b10 <
b10 &
b10 8
b11 -
b11 7
b11 =
1!
#7
b11 *
b11 /
b11 4
b11 :
b10 (
b10 .
b10 1
b10 0
0!
#8
b100 -
b100 7
b100 =
1!
#9
b100 *
b100 /
b100 4
b100 :
b11 (
b11 .
b11 1
b11 0
0!
#10
b1000000000000011 *
b1000000000000011 /
b1000000000000011 4
b1000000000000011 :
b1000000000000000 '
b1000000000000000 2
b1000000000000000 ;
b1 9
b1 <
b1 &
b1 8
b101 -
b101 7
b101 =
1!
#11
b11 *
b11 /
b11 4
b11 :
b1000000000000011 (
b1000000000000011 .
b1000000000000011 1
b1000000000000011 0
0!
#12
b1000000000000100 *
b1000000000000100 /
b1000000000000100 4
b1000000000000100 :
b10 5
b1 '
b1 2
b1 ;
b10 9
b10 <
b1000000010 &
b1000000010 8
b110 -
b110 7
b110 =
1!
#13
b1000000000000101 *
b1000000000000101 /
b1000000000000101 4
b1000000000000101 :
b1000000000000100 (
b1000000000000100 .
b1000000000000100 1
b1000000000000100 0
0!
#14
1$
0,
b1111 +
b1111 3
b1111 6
b0x *
b0x /
b0x 4
b0x :
b1010 5
b1000000000000000 '
b1000000000000000 2
b1000000000000000 ;
b1 9
b1 <
b101000000001 &
b101000000001 8
b111 -
b111 7
b111 =
1!
#15
b1000000000000100 *
b1000000000000100 /
b1000000000000100 4
b1000000000000100 :
0$
1%
b101 +
b101 3
b101 6
b100 5
b10000000001 &
b10000000001 8
b0 -
b0 7
b0 =
0!
#16
b1000000000000101 *
b1000000000000101 /
b1000000000000101 4
b1000000000000101 :
1,
0%
b100 +
b100 3
b100 6
b0 5
b1 '
b1 2
b1 ;
b10 9
b10 <
b10 &
b10 8
b1 -
b1 7
b1 =
1!
#17
b1000000000000110 *
b1000000000000110 /
b1000000000000110 4
b1000000000000110 :
b1000000000000101 (
b1000000000000101 .
b1000000000000101 1
b1000000000000101 0
0!
#18
b10 +
b10 3
b10 6
b100000000000010 *
b100000000000010 /
b100000000000010 4
b100000000000010 :
b1101 5
b10 '
b10 2
b10 ;
b0 9
b0 <
b110100000000 &
b110100000000 8
b10 -
b10 7
b10 =
1!
#19
b10000000000001 *
b10000000000001 /
b10000000000001 4
b10000000000001 :
b100000000000010 (
b100000000000010 .
b100000000000010 1
b100000000000010 0
0!
#20
